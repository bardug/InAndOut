<?xml version="1.0" encoding="UTF-8"?>
<project name="inandout" default="all">
  
  
  <property file="inandout.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/access-bridge-64.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  <!-- Modules -->
  
  
  <!-- Module Common -->
  
  <dirname property="module.common.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.common" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.common" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.common" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.common" value="${compiler.args}"/>
  
  <property name="common.output.dir" value="${module.common.basedir}/out/production/Common"/>
  <property name="common.testoutput.dir" value="${module.common.basedir}/out/test/Common"/>
  
  <path id="common.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="common.module.production.classpath">
    <path refid="${module.jdk.classpath.common}"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/junit-4.10.jar"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
  </path>
  
  <path id="common.runtime.production.module.classpath">
    <pathelement location="${common.output.dir}"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/junit-4.10.jar"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
  </path>
  
  <path id="common.module.classpath">
    <path refid="${module.jdk.classpath.common}"/>
    <pathelement location="${common.output.dir}"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/junit-4.10.jar"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
  </path>
  
  <path id="common.runtime.module.classpath">
    <pathelement location="${common.testoutput.dir}"/>
    <pathelement location="${common.output.dir}"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/junit-4.10.jar"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.common">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.common">
    <patternset refid="excluded.from.module.common"/>
  </patternset>
  
  <path id="common.module.sourcepath">
    <dirset dir="${module.common.basedir}/Common">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="common.module.test.sourcepath">
    <dirset dir="${module.common.basedir}/Common">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.common" depends="compile.module.common.production,compile.module.common.tests" description="Compile module Common"/>
  
  <target name="compile.module.common.production" description="Compile module Common; production classes">
    <mkdir dir="${common.output.dir}"/>
    <javac destdir="${common.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.common}/javac">
      <compilerarg line="${compiler.args.common}"/>
      <bootclasspath refid="common.module.bootclasspath"/>
      <classpath refid="common.module.production.classpath"/>
      <src refid="common.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.common"/>
    </javac>
    
    <copy todir="${common.output.dir}">
      <fileset dir="${module.common.basedir}/Common/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.common.tests" depends="compile.module.common.production" description="compile module Common; test classes" unless="skip.tests">
    <mkdir dir="${common.testoutput.dir}"/>
    <javac destdir="${common.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.common}/javac">
      <compilerarg line="${compiler.args.common}"/>
      <bootclasspath refid="common.module.bootclasspath"/>
      <classpath refid="common.module.classpath"/>
      <src refid="common.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.common"/>
    </javac>
    
    <copy todir="${common.testoutput.dir}">
      <fileset dir="${module.common.basedir}/Common/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.common" description="cleanup module">
    <delete dir="${common.output.dir}"/>
    <delete dir="${common.testoutput.dir}"/>
  </target>
  
  
  <!-- Module Backend -->
  
  <dirname property="module.backend.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.backend" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.backend" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.backend" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.backend" value="${compiler.args}"/>
  
  <property name="backend.output.dir" value="${module.backend.basedir}/out/production/Backend"/>
  <property name="backend.testoutput.dir" value="${module.backend.basedir}/out/test/Backend"/>
  
  <path id="backend.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="backend.module.production.classpath">
    <path refid="${module.jdk.classpath.backend}"/>
    <pathelement location="${common.output.dir}"/>
    <pathelement location="${basedir}/lib/junit-4.10.jar"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
  </path>
  
  <path id="backend.runtime.production.module.classpath">
    <pathelement location="${backend.output.dir}"/>
    <path refid="common.runtime.production.module.classpath"/>
    <pathelement location="${basedir}/lib/junit-4.10.jar"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
  </path>
  
  <path id="backend.module.classpath">
    <path refid="${module.jdk.classpath.backend}"/>
    <pathelement location="${backend.output.dir}"/>
    <pathelement location="${common.testoutput.dir}"/>
    <pathelement location="${common.output.dir}"/>
    <pathelement location="${basedir}/lib/junit-4.10.jar"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
  </path>
  
  <path id="backend.runtime.module.classpath">
    <pathelement location="${backend.testoutput.dir}"/>
    <pathelement location="${backend.output.dir}"/>
    <path refid="common.runtime.module.classpath"/>
    <pathelement location="${basedir}/lib/junit-4.10.jar"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.backend">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.backend">
    <patternset refid="excluded.from.module.backend"/>
  </patternset>
  
  <path id="backend.module.sourcepath">
    <dirset dir="${module.backend.basedir}/Backend">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="backend.module.test.sourcepath">
    <dirset dir="${module.backend.basedir}/Backend">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.backend" depends="compile.module.backend.production,compile.module.backend.tests" description="Compile module Backend"/>
  
  <target name="compile.module.backend.production" depends="compile.module.common" description="Compile module Backend; production classes">
    <mkdir dir="${backend.output.dir}"/>
    <javac destdir="${backend.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.backend}/javac">
      <compilerarg line="${compiler.args.backend}"/>
      <bootclasspath refid="backend.module.bootclasspath"/>
      <classpath refid="backend.module.production.classpath"/>
      <src refid="backend.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.backend"/>
    </javac>
    
    <copy todir="${backend.output.dir}">
      <fileset dir="${module.backend.basedir}/Backend/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.backend.tests" depends="compile.module.backend.production" description="compile module Backend; test classes" unless="skip.tests">
    <mkdir dir="${backend.testoutput.dir}"/>
    <javac destdir="${backend.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.backend}/javac">
      <compilerarg line="${compiler.args.backend}"/>
      <bootclasspath refid="backend.module.bootclasspath"/>
      <classpath refid="backend.module.classpath"/>
      <src refid="backend.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.backend"/>
    </javac>
    
    <copy todir="${backend.testoutput.dir}">
      <fileset dir="${module.backend.basedir}/Backend/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.backend" description="cleanup module">
    <delete dir="${backend.output.dir}"/>
    <delete dir="${backend.testoutput.dir}"/>
  </target>
  
  
  <!-- Module Frontend -->
  
  <dirname property="module.frontend.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.frontend" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.frontend" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.frontend" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.frontend" value="${compiler.args}"/>
  
  <property name="frontend.output.dir" value="${module.frontend.basedir}/out/production/Frontend"/>
  <property name="frontend.testoutput.dir" value="${module.frontend.basedir}/out/test/Frontend"/>
  
  <path id="frontend.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="frontend.module.production.classpath">
    <path refid="${module.jdk.classpath.frontend}"/>
    <pathelement location="${backend.output.dir}"/>
    <pathelement location="${common.output.dir}"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/jna-4.0.0.jar"/>
  </path>
  
  <path id="frontend.runtime.production.module.classpath">
    <pathelement location="${frontend.output.dir}"/>
    <path refid="backend.runtime.production.module.classpath"/>
    <path refid="common.runtime.production.module.classpath"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/jna-4.0.0.jar"/>
  </path>
  
  <path id="frontend.module.classpath">
    <path refid="${module.jdk.classpath.frontend}"/>
    <pathelement location="${frontend.output.dir}"/>
    <pathelement location="${backend.testoutput.dir}"/>
    <pathelement location="${backend.output.dir}"/>
    <pathelement location="${common.testoutput.dir}"/>
    <pathelement location="${common.output.dir}"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/jna-4.0.0.jar"/>
  </path>
  
  <path id="frontend.runtime.module.classpath">
    <pathelement location="${frontend.testoutput.dir}"/>
    <pathelement location="${frontend.output.dir}"/>
    <path refid="backend.runtime.module.classpath"/>
    <path refid="common.runtime.module.classpath"/>
    <pathelement location="${basedir}/lib/log4j-1.2.14.jar"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
    <pathelement location="${basedir}/lib/jna-4.0.0.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.frontend">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.frontend">
    <patternset refid="excluded.from.module.frontend"/>
  </patternset>
  
  <path id="frontend.module.sourcepath">
    <dirset dir="${module.frontend.basedir}/Frontend">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="frontend.module.test.sourcepath">
    <dirset dir="${module.frontend.basedir}/Frontend">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.frontend" depends="compile.module.frontend.production,compile.module.frontend.tests" description="Compile module Frontend"/>
  
  <target name="compile.module.frontend.production" depends="compile.module.backend,compile.module.common" description="Compile module Frontend; production classes">
    <mkdir dir="${frontend.output.dir}"/>
    <javac destdir="${frontend.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.frontend}/javac">
      <compilerarg line="${compiler.args.frontend}"/>
      <bootclasspath refid="frontend.module.bootclasspath"/>
      <classpath refid="frontend.module.production.classpath"/>
      <src refid="frontend.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.frontend"/>
    </javac>
    
    <copy todir="${frontend.output.dir}">
      <fileset dir="${module.frontend.basedir}/Frontend/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.frontend.tests" depends="compile.module.frontend.production" description="compile module Frontend; test classes" unless="skip.tests">
    <mkdir dir="${frontend.testoutput.dir}"/>
    <javac destdir="${frontend.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.frontend}/javac">
      <compilerarg line="${compiler.args.frontend}"/>
      <bootclasspath refid="frontend.module.bootclasspath"/>
      <classpath refid="frontend.module.classpath"/>
      <src refid="frontend.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.frontend"/>
    </javac>
    
    <copy todir="${frontend.testoutput.dir}">
      <fileset dir="${module.frontend.basedir}/Frontend/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.frontend" description="cleanup module">
    <delete dir="${frontend.output.dir}"/>
    <delete dir="${frontend.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.common, clean.module.backend, clean.module.frontend" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.common, compile.module.backend, compile.module.frontend" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.inandout:jar" value="${basedir}/out/artifacts/InAndOut_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.InAndOut.jar" value="${artifacts.temp.dir}/InAndOut.jar"/>
  </target>
  
  <target name="artifact.inandout:jar" depends="init.artifacts, compile.module.backend, compile.module.common, compile.module.frontend" description="Build &#39;InAndOut:jar&#39; artifact">
    <property name="artifact.temp.output.inandout:jar" value="${artifacts.temp.dir}/InAndOut_jar"/>
    <mkdir dir="${artifact.temp.output.inandout:jar}"/>
    <jar destfile="${temp.jar.path.InAndOut.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${backend.output.dir}"/>
      <zipfileset dir="${common.output.dir}"/>
      <zipfileset dir="${frontend.output.dir}"/>
      <zipfileset src="${basedir}/lib/slf4j-api-1.7.5.jar"/>
      <zipfileset src="${basedir}/lib/junit-4.10.jar"/>
      <zipfileset src="${basedir}/lib/log4j-1.2.14.jar"/>
      <zipfileset src="${basedir}/lib/slf4j-log4j12-1.7.5.jar"/>
      <zipfileset src="${basedir}/lib/jna-4.0.0.jar"/>
    </jar>
    <copy file="${temp.jar.path.InAndOut.jar}" tofile="${artifact.temp.output.inandout:jar}/InAndOut.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.inandout:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.inandout:jar}"/>
    <copy todir="${artifact.output.inandout:jar}">
      <fileset dir="${artifact.temp.output.inandout:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>